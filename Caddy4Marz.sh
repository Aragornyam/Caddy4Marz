#!/usr/bin/env bash
set -euo pipefail

print_step() {
  echo -e "\n\e[1;34m‚ñ∂ $1\e[0m"
}

print_done() {
  echo -e "\e[1;32m‚úî –ì–æ—Ç–æ–≤–æ\e[0m\n"
}

fail() {
  echo -e "\e[1;31m‚úñ –û—à–∏–±–∫–∞:\e[0m $1"
  exit 1
}

safe_read() {
  local __resultvar=$1
  local prompt="$2"
  local default="$3"
  local validation="$4"
  local input=""
  local valid=0

  while [[ $valid -eq 0 ]]; do
    read -rp "$prompt" input || input=""
    input="${input:-$default}"

    if [[ -z "$validation" ]] || [[ "$input" =~ $validation ]]; then
      valid=1
    else
      echo -e "\e[1;31m‚úñ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\e[0m"
    fi
  done

  printf -v "$__resultvar" '%s' "$input"
}

generate_random_string() {
  local length=${1:-16}
  (
    set +e
    tr -dc 'A-Za-z0-9' </dev/urandom 2>/dev/null | head -c"$length"
    return 0
  ) || (
    date +%s | sha256sum | base64 | tr -dc 'A-Za-z0-9' | head -c"$length"
  ) || echo "rnd$(shuf -i 1000-9999 -n 1)"
}

[[ $EUID -ne 0 ]] && fail "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç root, –Ω–∞–ø—Ä–∏–º–µ—Ä: sudo $0"

echo -e "\e[1;35m
===========================================
 –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Caddy –¥–ª—è Marzban
===========================================
\e[0m"

print_step "1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
apt update || fail "apt update –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π"
apt full-upgrade -y || fail "apt full-upgrade –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π"
print_done

print_step "2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
apt install -y curl gnupg apt-transport-https debian-keyring debian-archive-keyring \
  || fail "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–∑–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã"
print_done

print_step "3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Caddy"
curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' \
  | gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg \
  || fail "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ GPG-–∫–ª—é—á–∞"

curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' \
  | tee /etc/apt/sources.list.d/caddy-stable.list > /dev/null \
  || fail "–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"

chmod o+r /usr/share/keyrings/caddy-stable-archive-keyring.gpg
chmod o+r /etc/apt/sources.list.d/caddy-stable.list

apt update || fail "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤"
apt install -y caddy || fail "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Caddy"
print_done

print_step "4. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã"
mkdir -p /var/www/caddy /etc/caddy || fail "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
echo "<h1>–†–∞–±–æ—Ç–∞–µ—Ç Caddy –¥–ª—è Marzban</h1>" > /var/www/caddy/index.html
print_done

print_step "5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"
echo -e "\e[1;36m[–í–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ–±—É–µ–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –≤–∞—à–µ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏]\e[0m"

while true; do
  safe_read DOMAIN "‚Üí –î–æ–º–µ–Ω–Ω–æ–µ –∏–º—è: " "" ""
  if [[ -z "$DOMAIN" ]]; then
    echo -e "\e[1;31m‚úñ –î–æ–º–µ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!\e[0m"
  else
    break
  fi
done

safe_read USE_WWW "‚Üí –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å www-–ø–æ–¥–¥–æ–º–µ–Ω? [y/N]: " "n" "^[YyNn]?$"

DEFAULT_DASHBOARD_PATH=$(generate_random_string 12)
DEFAULT_XRAY_SUBSCRIPTION_PATH=$(generate_random_string 10)

safe_read DASHBOARD_PATH "‚Üí –ü—É—Ç—å –∫ –ø–∞–Ω–µ–ª–∏ (A-Z, a-z, 0-9, -_) [–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $DEFAULT_DASHBOARD_PATH]: " \
  "$DEFAULT_DASHBOARD_PATH" "^[a-zA-Z0-9_-]+$"

safe_read XRAY_SUBSCRIPTION_PATH "‚Üí –ü—É—Ç—å –∫ –ø–æ–¥–ø–∏—Å–∫–µ (A-Z, a-z, 0-9, -_) [–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $DEFAULT_XRAY_SUBSCRIPTION_PATH]: " \
  "$DEFAULT_XRAY_SUBSCRIPTION_PATH" "^[a-zA-Z0-9_-]+$"

safe_read MARZBAN_PORT "‚Üí –ü–æ—Ä—Ç Marzban [8000-65535, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 8000]: " "8000" "^[0-9]+$"
safe_read HTTPS_PORT "‚Üí HTTPS-–ø–æ—Ä—Ç Caddy [–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 20000]: " "20000" "^[0-9]+$"

SERVER_IP=$(curl -s http://checkip.amazonaws.com || echo "127.0.0.1")
safe_read FINAL_IP "‚Üí IP —Å–µ—Ä–≤–µ—Ä–∞ [–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $SERVER_IP]: " "$SERVER_IP" "^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$"

print_done

print_step "6. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Caddy"
cat > /etc/caddy/Caddyfile <<EOF
{
  https_port $HTTPS_PORT
  default_bind 127.0.0.1
  servers {
    listener_wrappers {
      proxy_protocol {
        allow 127.0.0.1/32
      }
      tls
    }
  }
  auto_https disable_redirects
}

https://$DOMAIN {
  @marzban expression path("/$DASHBOARD_PATH/*") || path("/$XRAY_SUBSCRIPTION_PATH/*") || path("/api/*") || path("/docs/*") || path("/redoc/*") || path("/openapi.json") || path("/statics/*")
  handle @marzban {
    reverse_proxy 127.0.0.1:$MARZBAN_PORT
  }
  header Alt-Svc h3=":443";ma=2592000
  root * /var/www/caddy
  file_server
  redir /index.html /
  log {
    output file /var/lib/caddy/access.log {
      roll_size 100mb
      roll_keep 5
    }
  }
}

https://$FINAL_IP {
  tls internal
  header Alt-Svc h3=":443";ma=2592000
  respond * 204
}

:80 {
  bind 0.0.0.0
  respond * 204
}

http://$DOMAIN$( [[ "$USE_WWW" =~ ^[Yy] ]] && echo ", http://www.$DOMAIN" ) {
  bind 0.0.0.0
  redir https://$DOMAIN{uri} permanent
}
EOF

if [[ "$USE_WWW" =~ ^[Yy] ]]; then
  cat >> /etc/caddy/Caddyfile <<EOF

https://www.$DOMAIN {
  header Alt-Svc h3=":443";ma=2592000
  redir https://$DOMAIN{uri} permanent
}
EOF
fi
print_done

print_step "7. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ Caddy"
systemctl enable caddy
systemctl restart caddy || fail "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Caddy"
print_done

echo -e "\e[1;32m
===========================================
üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!
===========================================\e[0m"

echo -e "\e[1;36m
–î–æ—Å—Ç—É–ø –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
üîó \e[1;34mhttps://$DOMAIN/$DASHBOARD_PATH/\e[0m

–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫:
üßæ \e[1;34mhttps://$DOMAIN/$XRAY_SUBSCRIPTION_PATH/\e[0m

üìÅ –§–∞–π–ª—ã –º–∞—Å–∫–∏—Ä–æ–≤–æ—á–Ω–æ–≥–æ —Å–∞–π—Ç–∞ –Ω—É–∂–Ω–æ –∫–ª–∞—Å—Ç—å –≤ –∫–∞—Ç–∞–ª–æ–≥: \e[1;34m/var/www/caddy\e[0m
\e[0m"

echo -e "\e[1;33m
‚ö† –í–ê–ñ–ù–û! –î–ª—è –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:
1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Marzban:
   nano /opt/marzban/.env

2. –î–æ–±–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–ø—É—Ç–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –∫–∞–≤—ã—á–∫–∞—Ö):
   DASHBOARD_PATH = \"/$DASHBOARD_PATH/\"
   XRAY_SUBSCRIPTION_PATH = \"$XRAY_SUBSCRIPTION_PATH\"

3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Marzban:
   marzban restart
\e[0m"