#!/usr/bin/env bash
set -euo pipefail

SERVER_IP=$(curl -s4 https://checkip.amazonaws.com || curl -s4 https://ifconfig.me || echo "127.0.0.1")

print_step() {
  echo -e "\n\e[1;34m‚ñ∂ $1\e[0m"
}

print_done() {
  echo -e "\e[1;32m‚úî –ì–æ—Ç–æ–≤–æ\e[0m"
}

print_warning() {
  echo -e "\e[1;33m‚ö† –í–ù–ò–ú–ê–ù–ò–ï: $1\e[0m"
}

fail() {
  echo -e "\n\e[1;31m‚úñ –û–®–ò–ë–ö–ê:\e[0m $1" >&2
  exit 1
}

safe_read() {
  local __resultvar=$1
  local prompt="$2"
  local default="$3"
  local validation_regex="$4"
  local input=""
  local valid=0

  while [[ $valid -eq 0 ]]; do
    read -rp "$prompt" input || true
    input="${input:-$default}"

    if [[ -z "$validation_regex" ]] || [[ "$input" =~ $validation_regex ]]; then
      valid=1
    else
      echo -e "\e[1;31m  ‚úñ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\e[0m"
    fi
  done
  printf -v "$__resultvar" '%s' "$input"
}

generate_random_string() {
    (
        set +o pipefail
        tr -dc 'a-zA-Z0-9' </dev/urandom | head -c "${1:-12}"
    )
}

prepare_system() {
  print_step "1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
  apt-get update -y || fail "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤ (apt-get update)."
  apt-get full-upgrade -y || fail "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç—ã (apt-get full-upgrade)."
  apt-get install -y --no-install-recommends curl gnupg apt-transport-https debian-keyring debian-archive-keyring dnsutils \
    || fail "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏."
  print_done
}

install_caddy() {
  print_step "2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ Caddy"
  if command -v caddy &>/dev/null; then
    print_warning "Caddy —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –û–±–Ω–æ–≤–ª—è—é –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏..."
    apt-get install --only-upgrade -y caddy
  else
    curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' \
      | gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg \
      || fail "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å GPG-–∫–ª—é—á –¥–ª—è Caddy."
    curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' \
      | tee /etc/apt/sources.list.d/caddy-stable.list > /dev/null \
      || fail "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Caddy."
    apt-get update -y || fail "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Caddy."
    apt-get install -y caddy || fail "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Caddy."
  fi
  print_done
}

get_user_settings() {
  print_step "3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"

  while true; do
    safe_read DOMAIN "‚Üí –í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω–Ω–æ–µ –∏–º—è: " "" "^[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$"
    echo "  –ü—Ä–æ–≤–µ—Ä—è—é –¥–æ–º–µ–Ω '$DOMAIN'..."
    DOMAIN_IP=$(dig +short A "$DOMAIN" @1.1.1.1)

    if [[ -z "$DOMAIN_IP" ]]; then
      print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å IP-–∞–¥—Ä–µ—Å –¥–ª—è –¥–æ–º–µ–Ω–∞ '$DOMAIN'. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ A-–∑–∞–ø–∏—Å—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
      continue
    fi

    echo "  ‚úî –î–æ–º–µ–Ω '$DOMAIN' —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ IP: $DOMAIN_IP"
    echo "  ‚Üí IP-–∞–¥—Ä–µ—Å —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP"

    if [[ "$DOMAIN_IP" != "$SERVER_IP" ]]; then
      print_warning "IP –¥–æ–º–µ–Ω–∞ ($DOMAIN_IP) –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å IP —Å–µ—Ä–≤–µ—Ä–∞ ($SERVER_IP)!"
      safe_read continue_anyway "‚Üí Caddy –º–æ–∂–µ—Ç –Ω–µ –ø–æ–ª—É—á–∏—Ç—å SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç. –í—Å–µ —Ä–∞–≤–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? [y/N]: " "n" "^[YyNn]?$"
      if [[ "$continue_anyway" =~ ^[Yy]$ ]]; then
        break
      fi
    else
      echo -e "\e[1;32m  ‚úî –û—Ç–ª–∏—á–Ω–æ! IP –¥–æ–º–µ–Ω–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å IP —Å–µ—Ä–≤–µ—Ä–∞.\e[0m"
      break
    fi
  done

  safe_read USE_WWW "‚Üí –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å www-–ø–æ–¥–¥–æ–º–µ–Ω (www.$DOMAIN)? [y/N]: " "n" "^[YyNn]?$"
  DEFAULT_DASHBOARD_PATH=$(generate_random_string 12)
  safe_read DASHBOARD_PATH "‚Üí –ü—É—Ç—å –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $DEFAULT_DASHBOARD_PATH): " "$DEFAULT_DASHBOARD_PATH" "^[a-zA-Z0-9_-]+$"
  DEFAULT_SUB_PATH=$(generate_random_string 10)
  safe_read XRAY_SUBSCRIPTION_PATH "‚Üí –ü—É—Ç—å –¥–ª—è —Å—Å—ã–ª–æ–∫-–ø–æ–¥–ø–∏—Å–æ–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $DEFAULT_SUB_PATH): " "$DEFAULT_SUB_PATH" "^[a-zA-Z0-9_-]+$"
  safe_read MARZBAN_PORT "‚Üí –ü–æ—Ä—Ç Marzban (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 8000): " "8000" "^([1-9][0-9]{3,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$"
  safe_read HTTPS_PORT "‚Üí –í–Ω–µ—à–Ω–∏–π HTTPS-–ø–æ—Ä—Ç Caddy (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 20000): " "20000" "^([1-9][0-9]{0,4})$"
  safe_read FINAL_IP "‚Üí IP —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $SERVER_IP): " "$SERVER_IP" "^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$"

  print_done
}

generate_caddy_config() {
  print_step "4. –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è Caddy"

  local caddyfile_path="/etc/caddy/Caddyfile"
  if [[ -f "$caddyfile_path" ]]; then
      print_warning "–§–∞–π–ª '$caddyfile_path' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
      safe_read overwrite "‚Üí –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –µ–≥–æ? [y/N]: " "n" "^[YyNn]?$"
      if [[ ! "$overwrite" =~ ^[Yy]$ ]]; then
          echo "  –ü—Ä–æ–ø—É—Å–∫–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."
          return
      fi
      echo "  –°–æ–∑–¥–∞—é —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –≤ ${caddyfile_path}.bak..."
      cp "$caddyfile_path" "${caddyfile_path}.bak"
  fi

  mkdir -p /var/www/caddy /etc/caddy /var/log/caddy
  echo "<h1>Caddy for Marzban is working!</h1>" > /var/www/caddy/index.html
  chown -R caddy:caddy /var/www/caddy /etc/caddy /var/log/caddy

  cat > "$caddyfile_path" <<EOF
{
  https_port $HTTPS_PORT
  default_bind 127.0.0.1
  servers {
    listener_wrappers {
      proxy_protocol {
        allow 127.0.0.1/32
      }
      tls
    }
  }
  auto_https disable_redirects
}

https://$DOMAIN {
  @marzban expression path("/$DASHBOARD_PATH/*") || path("/$XRAY_SUBSCRIPTION_PATH/*") || path("/api/*") || path("/docs/*") || path("/redoc/*") || path("/openapi.json") || path("/statics/*")
  handle @marzban {
    reverse_proxy 127.0.0.1:$MARZBAN_PORT
  }
  header Alt-Svc h3=":$HTTPS_PORT";ma=2592000
  root * /var/www/caddy
  file_server
  redir /index.html /
  log {
    output file /var/log/caddy/access.log {
      roll_size 100mb
      roll_keep 5
    }
  }
}

https://$FINAL_IP {
  tls internal
  header Alt-Svc h3=":$HTTPS_PORT";ma=2592000
  respond * 204
}

:80 {
  bind 0.0.0.0
  respond * 204
}

http://$DOMAIN$( [[ "$USE_WWW" =~ ^[Yy] ]] && echo ", http://www.$DOMAIN" ) {
  bind 0.0.0.0
  redir https://$DOMAIN{uri} permanent
}
EOF

  if [[ "$USE_WWW" =~ ^[Yy]$ ]]; then
    cat >> "$caddyfile_path" <<EOF

https://www.$DOMAIN {
  header Alt-Svc h3=":$HTTPS_PORT";ma=2592000
  redir https://$DOMAIN{uri} permanent
}
EOF
  fi
  print_done
}

start_caddy_service() {
  print_step "5. –ó–∞–ø—É—Å–∫ –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ Caddy"

  echo "  –§–æ—Ä–º–∞—Ç–∏—Ä—É—é –∏ –ø—Ä–æ–≤–µ—Ä—è—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
  caddy fmt --overwrite /etc/caddy/Caddyfile || print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å Caddyfile."
  caddy validate --config /etc/caddy/Caddyfile --adapter caddyfile || fail "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Caddy –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ /etc/caddy/Caddyfile."

  echo "  –ê–∫—Ç–∏–≤–∏—Ä—É—é –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é —Å–µ—Ä–≤–∏—Å Caddy..."
  systemctl enable caddy >/dev/null 2>&1
  systemctl restart caddy || fail "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å/–ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å Caddy."
  print_done
}

show_final_summary() {
  echo -e "\e[1;32m
===========================================
üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!
===========================================\e[0m"

  echo -e "\e[1;36m
–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å Marzban –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É:
üîó \e[1;34mhttps://$DOMAIN/$DASHBOARD_PATH/\e[0m

–°—Å—ã–ª–∫–∞ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –≤ –∫–ª–∏–µ–Ω—Ç—ã:
üßæ \e[1;34mhttps://$DOMAIN/$XRAY_SUBSCRIPTION_PATH/{token}\e[0m

üìÅ –§–∞–π–ª—ã –¥–ª—è —Å–∞–π—Ç–∞-–∑–∞–≥–ª—É—à–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ: \e[1;34m/var/www/caddy\e[0m
\e[0m"

  echo -e "\e[1;33m
‚ö† –í–ê–ñ–ù–û! –û—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥ ‚Äî –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Marzban:
1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Marzban:
   \e[0;33mnano /opt/marzban/.env\e[0m

2. –î–æ–±–∞–≤—å—Ç–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –≤ –Ω–µ–º —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏:
   \e[0;33mDASHBOARD_PATH = \"/$DASHBOARD_PATH/\" \e[0m
   \e[0;33mXRAY_SUBSCRIPTION_PATH = \"$XRAY_SUBSCRIPTION_PATH\" \e[0m

3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Marzban, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è:
   \e[0;33mmarzban restart\e[0m
\e[0m"
}

main() {
  [[ $EUID -ne 0 ]] && fail "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root, –Ω–∞–ø—Ä–∏–º–µ—Ä: sudo $0"

  echo -e "\e[1;35m
===========================================
  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Caddy –¥–ª—è Marzban
===========================================
\e[0m"

  prepare_system
  install_caddy
  get_user_settings
  generate_caddy_config
  start_caddy_service
  show_final_summary
}

main "$@"